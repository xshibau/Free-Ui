local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

local library = {}
local ui = Instance.new("ScreenGui")
ui.Name = "CoreUiLib"
ui.ResetOnSpawn = false
ui.Parent = CoreGui

local function dragify(frame)
	local dragging = false
	local dragInput, start, pos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			start = input.Position
			pos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - start
			frame.Position = UDim2.new(pos.X.Scale, pos.X.Offset + delta.X, pos.Y.Scale, pos.Y.Offset + delta.Y)
		end
	end)
end

function library:CreateWindow(name)
	local main = Instance.new("Frame")
	main.Size = UDim2.new(0, 400, 0, 300)
	main.Position = UDim2.new(0, 100, 0, 100)
	main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	main.Parent = ui

	local title = Instance.new("TextLabel")
	title.Text = name
	title.Size = UDim2.new(1, 0, 0, 40)
	title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.Parent = main

	local scroll = Instance.new("ScrollingFrame")
	scroll.Size = UDim2.new(1, -10, 1, -50)
	scroll.Position = UDim2.new(0, 5, 0, 45)
	scroll.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	scroll.ScrollBarThickness = 4
	scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	scroll.Parent = main

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 6)
	layout.Parent = scroll
	layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)

	dragify(main)

	local funcs = {}

	function funcs:CreateButton(text, callback)
		local b = Instance.new("TextButton")
		b.Text = text
		b.Size = UDim2.new(1, -10, 0, 30)
		b.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		b.TextColor3 = Color3.fromRGB(255, 255, 255)
		b.Parent = scroll
		b.MouseButton1Click:Connect(function() pcall(callback) end)
	end

	function funcs:CreateToggle(text, default, callback)
		local holder = Instance.new("Frame")
		holder.Size = UDim2.new(1, -10, 0, 30)
		holder.BackgroundTransparency = 1
		holder.Parent = scroll

		local lbl = Instance.new("TextLabel")
		lbl.Text = text
		lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
		lbl.BackgroundTransparency = 1
		lbl.Size = UDim2.new(0.8, 0, 1, 0)
		lbl.Parent = holder

		local toggle = Instance.new("Frame")
		toggle.Size = UDim2.new(0, 40, 0, 20)
		toggle.Position = UDim2.new(1, -50, 0.5, -10)
		toggle.BackgroundColor3 = default and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(100, 100, 100)
		toggle.Parent = holder

		local circle = Instance.new("Frame")
		circle.Size = UDim2.new(0, 16, 0, 16)
		circle.Position = default and UDim2.new(0, 22, 0, 2) or UDim2.new(0, 2, 0, 2)
		circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		circle.Parent = toggle

		local on = default
		toggle.InputBegan:Connect(function(i)
			if i.UserInputType == Enum.UserInputType.MouseButton1 then
				on = not on
				toggle.BackgroundColor3 = on and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(100, 100, 100)
				circle:TweenPosition(on and UDim2.new(0, 22, 0, 2) or UDim2.new(0, 2, 0, 2), "Out", "Sine", 0.15, true)
				pcall(callback, on)
			end
		end)
	end

	function funcs:CreateTextBox(placeholder, callback)
		local box = Instance.new("TextBox")
		box.PlaceholderText = placeholder
		box.Size = UDim2.new(1, -10, 0, 30)
		box.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		box.TextColor3 = Color3.fromRGB(255, 255, 255)
		box.ClearTextOnFocus = false
		box.Parent = scroll
		box.FocusLost:Connect(function()
			pcall(callback, box.Text)
		end)
	end

	function funcs:CreateSlider(text, min, max, default, callback)
		local holder = Instance.new("Frame")
		holder.Size = UDim2.new(1, -10, 0, 40)
		holder.BackgroundTransparency = 1
		holder.Parent = scroll

		local lbl = Instance.new("TextLabel")
		lbl.Text = text.." ["..default.."]"
		lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
		lbl.Size = UDim2.new(1, 0, 0, 20)
		lbl.BackgroundTransparency = 1
		lbl.Parent = holder

		local bar = Instance.new("Frame")
		bar.Size = UDim2.new(1, -20, 0, 8)
		bar.Position = UDim2.new(0, 10, 0, 25)
		bar.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		bar.Parent = holder

		local fill = Instance.new("Frame")
		fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
		fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
		fill.Parent = bar

		local dragging = false
		bar.InputBegan:Connect(function(i)
			if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
		end)
		bar.InputEnded:Connect(function(i)
			if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
		end)
		UserInputService.InputChanged:Connect(function(i)
			if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
				local rel = math.clamp((i.Position.X - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
				fill.Size = UDim2.new(rel, 0, 1, 0)
				local val = math.floor(min + (max - min) * rel)
				lbl.Text = text.." ["..val.."]"
				pcall(callback, val)
			end
		end)
	end

	return funcs
end

return library
